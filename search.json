[{"path":[]},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://glycoverse.github.io/glyclean/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://glycoverse.github.io/glyclean/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to glyclean","title":"Contributing to glyclean","text":"outlines propose change glyclean. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://glycoverse.github.io/glyclean/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to glyclean","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://glycoverse.github.io/glyclean/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to glyclean","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://glycoverse.github.io/glyclean/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to glyclean","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"glycoverse/glyclean\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://glycoverse.github.io/glyclean/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to glyclean","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://glycoverse.github.io/glyclean/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to glyclean","text":"Please note glyclean project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://glycoverse.github.io/glyclean/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 glyclean authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://glycoverse.github.io/glyclean/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with glyclean","title":"Getting help with glyclean","text":"Thanks using glyclean! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://glycoverse.github.io/glyclean/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with glyclean","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://glycoverse.github.io/glyclean/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with glyclean","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://glycoverse.github.io/glyclean/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with glyclean","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"welcome-to-the-wild-world-of-data-preprocessing","dir":"Articles","previous_headings":"","what":"Welcome to the Wild World of Data Preprocessing! 🧬","title":"Get Started with glyclean","text":"Every omics data analysis journey begins challenge: taming raw data. Think like preparing ingredients cooking gourmet meal – need wash, chop, season everything just right. glycomics glycoproteomics world, means normalization, missing value handling, batch effect correction. Meet glyclean – Swiss Army knife glycoproteomics glycomics data preprocessing! package provides comprehensive toolkit takes guesswork data cleaning, specialized methods designed specifically unique challenges glycan analysis. Important Note: package primarily designed glyexp::experiment() objects. ’re new data structure, highly recommend checking introduction first. ’ll also using glyread package load data – ’s go-tool glycoverse ecosystem.","code":"library(glyclean) #>  #> Attaching package: 'glyclean' #> The following object is masked from 'package:stats': #>  #>     aggregate library(glyread) library(glyexp)"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"meet-our-star-player-real-glycoproteomics-data","dir":"Articles","previous_headings":"","what":"Meet Our Star Player: Real Glycoproteomics Data 🌟","title":"Get Started with glyclean","text":"Let’s dive real-world dataset showcase glyclean can . ’ll use glyread::read_pglyco3_pglycoquant() load data proper glyexp::experiment() object. Let’s peek hood see ’re working : beautiful N-glycoproteomics dataset featuring 500 PSMs (Peptide Spectrum Matches) across 12 samples. samples come 3 different batches represent 4 distinct biological groups – perfect playground demonstrating preprocessing techniques!","code":"exp <- read_pglyco3_pglycoquant(   \"glycopeptides.list\",   sample_info = \"sample_info.csv\",   glycan_type = \"N\" ) #> ℹ Reading data #> ✔ Reading data [465ms] #>  #> ℹ Parsing glycan compositions #> ✔ Parsing glycan compositions [214ms] #>  #> ℹ Parsing glycan structures #> ✔ Parsing glycan structures [2.9s] #>  #> ℹ Packing experiment #> ✔ Packing experiment [19ms] #>  exp #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Expression matrix: 12 samples, 500 variables #> ℹ Sample information fields: group and batch #> ℹ Variable information fields: peptide, proteins, genes, glycan_composition, glycan_structure, peptide_site, protein_sites, charge, and modifications get_var_info(exp) #> # A tibble: 500 × 10 #>    variable peptide        proteins genes    glycan_composition glycan_structure #>    <chr>    <chr>          <chr>    <chr>    <comp>             <structure>      #>  1 PSM1     JKTQGK         P08185   SERPINA6 Hex(5)HexNAc(4)Ne… NeuAc(??-?)Hex(… #>  2 PSM2     HSHNJJSSDLHPHK P04196   HRG      Hex(5)HexNAc(4)Ne… NeuAc(??-?)Hex(… #>  3 PSM3     HSHNJJSSDLHPHK P04196   HRG      Hex(5)HexNAc(4)    Hex(??-?)HexNAc… #>  4 PSM4     HSHNJJSSDLHPHK P04196   HRG      Hex(5)HexNAc(4)Ne… NeuAc(??-?)Hex(… #>  5 PSM5     HJSTGCLR       P10909   CLU      Hex(6)HexNAc(5)    Hex(??-?)HexNAc… #>  6 PSM6     HSHNJJSSDLHPHK P04196   HRG      Hex(5)HexNAc(4)Ne… NeuAc(??-?)Hex(… #>  7 PSM7     HSHNJJSSDLHPHK P04196   HRG      Hex(5)HexNAc(4)Ne… NeuAc(??-?)Hex(… #>  8 PSM8     HSHNJJSSDLHPHK P04196   HRG      Hex(5)HexNAc(4)Ne… NeuAc(??-?)Hex(… #>  9 PSM9     HSHNJJSSDLHPHK P04196   HRG      Hex(5)HexNAc(4)Ne… NeuAc(??-?)Hex(… #> 10 PSM10    HSHNJJSSDLHPHK P04196   HRG      Hex(5)HexNAc(4)    Hex(??-?)HexNAc… #> # ℹ 490 more rows #> # ℹ 4 more variables: peptide_site <int>, protein_sites <chr>, charge <int>, #> #   modifications <chr> get_sample_info(exp) #> # A tibble: 12 × 3 #>    sample                  group batch #>    <chr>                   <chr> <dbl> #>  1 20241224-LXJ-Nglyco-C_1 C         1 #>  2 20241224-LXJ-Nglyco-C_2 C         2 #>  3 20241224-LXJ-Nglyco-C_3 C         3 #>  4 20241224-LXJ-Nglyco-H_1 H         1 #>  5 20241224-LXJ-Nglyco-H_2 H         2 #>  6 20241224-LXJ-Nglyco-H_3 H         3 #>  7 20241224-LXJ-Nglyco-M_1 M         1 #>  8 20241224-LXJ-Nglyco-M_2 M         2 #>  9 20241224-LXJ-Nglyco-M_3 M         3 #> 10 20241224-LXJ-Nglyco-Y_1 Y         1 #> 11 20241224-LXJ-Nglyco-Y_2 Y         2 #> 12 20241224-LXJ-Nglyco-Y_3 Y         3"},{"path":[]},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"meet-auto_clean-your-preprocessing-superhero","dir":"Articles","previous_headings":"The Magic Wand: One Function to Rule Them All ✨","what":"Meet auto_clean() – Your Preprocessing Superhero","title":"Get Started with glyclean","text":"Ready magic? Watch : ’s ! data now preprocessed ready analysis! 🎉","code":"clean_exp <- auto_clean(exp) #> ℹ Normalizing data (Median) #> ✔ Normalizing data (Median) [133ms] #>  #> ℹ Removing variables with >50% missing values #> ✔ Removing variables with >50% missing values [16ms] #>  #> ℹ Imputing missing values #> ℹ Sample size <= 30, using sample minimum imputation #> ℹ Imputing missing values✔ Imputing missing values [15ms] #>  #> ℹ Aggregating data #> ✔ Aggregating data [117ms] #>  #> ℹ Normalizing data again #> ℹ Detecting batch effects using ANOVA for 263 variables... #> ℹ Normalizing data again✔ Batch effect detection completed. 1 out of 263 variables show significant batch effects (p < 0.05). #> ℹ Normalizing data againℹ Batch effects detected in 0.4% of variables (<=10%). Skipping batch correction. #> ℹ Normalizing data again✔ Normalizing data again [653ms]"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"but-wait-what-just-happened-the-science-behind-the-magic","dir":"Articles","previous_headings":"The Magic Wand: One Function to Rule Them All ✨","what":"But Wait, What Just Happened? The Science Behind the Magic","title":"Get Started with glyclean","text":"auto_clean() isn’t actually magic (sorry disappoint) – ’s carefully designed intelligent pipeline : Analyzes data: Checks experiment type, sample size, metadata Selects optimal methods: Chooses best preprocessing strategy specific dataset Executes pipeline: Runs everything optimal order ’s complete workflow (yes, ’s impressively comprehensive):","code":""},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"the-pipeline-approach-chaining-operations-like-a-pro","dir":"Articles","previous_headings":"","what":"The Pipeline Approach: Chaining Operations Like a Pro 🔗","title":"Get Started with glyclean","text":"dive individual steps, let’s talk powerful R technique: piping! can use either native pipe operator |> (R ≥ 4.1.0) magrittr pipe %>% chain preprocessing operations together. makes code readable workflow elegant. ’s auto_clean() works hood glycoproteomics data, written manual pipeline: use pipes? Cleaner code: need intermediate variables Logical flow: Operations read left--right, top--bottom Fewer errors: Less chance mixing variable names Easy experimentation: Simply comment modify steps Pro Tips Pipeline Usage: Use |> new R versions (≥ 4.1.0) %>% older versions Break long pipelines across multiple lines readability Comment step document reasoning Save intermediate results debugging: intermediate_result <- exp |> step1() |> step2()","code":"# The complete glycoproteomics preprocessing pipeline # This is essentially what auto_clean() does automatically! cleaned_exp <- exp |>   normalize_median() |>                       # Step 1: Initial normalization   remove_missing_variables(prop = 0.5) |>     # Step 2: Remove variables with >50% missing   impute_sample_min() |>                      # Step 3: Impute missing values (for small datasets)   aggregate(to_level = \"gfs\") |>              # Step 4: Aggregate to glycoform level   normalize_median() |>                       # Step 5: Re-normalize after aggregation   correct_batch_effect()                      # Step 6: Correct batch effects (if batch column exists)"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"taking-the-scenic-route-step-by-step-preprocessing","dir":"Articles","previous_headings":"","what":"Taking the Scenic Route: Step-by-Step Preprocessing 🚶‍♀️","title":"Get Started with glyclean","text":"auto_clean() fantastic getting started, ’ll eventually want control preprocessing pipeline. Let’s explore step individually – think learning cook rather just ordering takeout!","code":""},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"step-1-normalization-getting-everyone-on-the-same-page","dir":"Articles","previous_headings":"Taking the Scenic Route: Step-by-Step Preprocessing 🚶‍♀️","what":"Step 1: Normalization – Getting Everyone on the Same Page 📏","title":"Get Started with glyclean","text":"Imagine ’re comparing heights people measured different units – feet, meters, furlongs (okay, maybe furlongs). Normalization thing omics data, bringing intensities comparable scale. auto_clean() : Glycoproteomics data: Median normalization Glycomics data: Median quotient normalization followed total area normalization Available normalization methods glyclean: Pro Tips: - Notice parameter many functions? allows stratified normalization within groups – super useful distinct experimental conditions! - Maximum flexibility: parameter accepts column names sample metadata direct vectors! gives complete control grouping, even custom groupings aren’t stored experiment object. median normalization manually:","code":"# Example: Using by parameter with a custom vector # Normalize within custom groups (e.g., based on some external criteria) custom_groups <- c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\", \"A\", \"A\", \"B\", \"B\", \"C\", \"C\") normalized_exp <- normalize_median(exp, by = custom_groups) normed_exp <- normalize_median(exp)"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"step-2-variable-filtering-saying-goodbye-to-the-unreliable","dir":"Articles","previous_headings":"Taking the Scenic Route: Step-by-Step Preprocessing 🚶‍♀️","what":"Step 2: Variable Filtering – Saying Goodbye to the Unreliable 🧹","title":"Get Started with glyclean","text":"variables like friend never shows plans – ’re missing time aren’t helpful. omics data, variables many missing values often noise signal. auto_clean() : Removes variables >50% missing values Manual approach (differently): code translates : “Keep variable complete data least one biological group.” Perfect maximizing number glycopeptides retained!","code":"filtered_exp <- remove_missing_variables(normed_exp, n = 0, by = \"group\", strict = FALSE)"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"step-3-imputation-filling-in-the-blanks-intelligently","dir":"Articles","previous_headings":"Taking the Scenic Route: Step-by-Step Preprocessing 🚶‍♀️","what":"Step 3: Imputation – Filling in the Blanks Intelligently 🔮","title":"Get Started with glyclean","text":"’s things get scientifically interesting! Missing values mass spectrometry aren’t randomly distributed – follow patterns based physics chemistry measurement process. Science: Missing values typically “Missing Random” (MAR), meaning ’re related intensity signal. Low-abundance ions likely missed, either due poor ionization efficiency fall detection threshold. auto_clean() (intelligently based sample size): Small studies (≤30 samples): Sample minimum imputation (ultra-robust) Medium studies (30-100 samples): Minimum probability imputation (statistically principled) Large studies (>100 samples): MissForest imputation (machine learning power) imputation toolkit: demonstration, let’s use simple zero imputation:","code":"imputed_exp <- impute_zero(filtered_exp)"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"step-4-aggregation-from-peptides-to-glycoforms","dir":"Articles","previous_headings":"Taking the Scenic Route: Step-by-Step Preprocessing 🚶‍♀️","what":"Step 4: Aggregation – From Peptides to Glycoforms 🔄","title":"Get Started with glyclean","text":"’s glycoproteomics gets uniquely challenging! Search engines typically report results PSM peptide level, really care glycoforms – specific glycan structures attached specific protein sites. Problem: One glycoform can appear multiple times data due : Different charge states Post-translational modifications Missed protease cleavages Different peptide sequences covering site Solution: Intelligent aggregation! Aggregation levels available: “gps”: Glycopeptides structures (detailed) “gp”: Glycopeptides compositions “gfs”: Glycoforms structures (recommended default) “gf”: Glycoforms compositions (condensed) auto_clean() : glycan_structure column exists, aggregate “gfs” level. Otherwise, aggregate “gf” level. Pro move: Re-normalize aggregation account new intensity distributions:","code":"aggregated_exp <- aggregate(imputed_exp, to_level = \"gf\") aggregated_exp2 <- normalize_median(aggregated_exp)"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"step-5-batch-effect-correction-harmonizing-your-orchestra","dir":"Articles","previous_headings":"Taking the Scenic Route: Step-by-Step Preprocessing 🚶‍♀️","what":"Step 5: Batch Effect Correction – Harmonizing Your Orchestra 🎼","title":"Get Started with glyclean","text":"Batch effects “different violinists playing piece” problem omics data. Even following identical protocols, subtle differences instruments, reagents, environmental conditions can introduce systematic bias. Good News: experimental design well-controlled (conditions distributed across batches), batch effect correction can work wonders! auto_clean() : Automatically detects corrects batch effects finds “batch” column sample metadata, batch effects detected 10% variables. batch effects, correct anyway demonstration.","code":"# To detect batch effects: p_values <- detect_batch_effect(aggregated_exp2) #> ℹ Detecting batch effects using ANOVA for 223 variables... #> ✔ Batch effect detection completed. 1 out of 223 variables show significant batch effects (p < 0.05). p_values[1:5] #>        V1        V2        V3        V4        V5  #> 0.5949390 0.9970692 0.7404105 0.4850942 0.9593795 # To correct batch effects: corrected_exp <- correct_batch_effect(aggregated_exp2) #> Found3batches #> Adjusting for0covariate(s) or covariate level(s) #> Standardizing Data across genes #> Fitting L/S model and finding priors #> Finding parametric adjustments #> Adjusting the Data #> ✔ Batch effect correction completed using ComBat algorithm."},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"step-6-protein-inference-solving-the-identity-crisis","dir":"Articles","previous_headings":"Taking the Scenic Route: Step-by-Step Preprocessing 🚶‍♀️","what":"Step 6: Protein Inference – Solving the Identity Crisis 🔍","title":"Get Started with glyclean","text":"Imagine ’re costume party everyone’s wearing masks, people look similar can’t tell ’s . ’s exactly happens protein assignments mass spectrometry! Problem: pGlyco3 often reports multiple potential protein assignments single glycopeptide sequence. ? many proteins share identical peptide sequences – ’re like molecular twins wearing outfit. creates headache want perform protein-level analysis. Detective Work: Let’s see many glycopeptides suffering identity crisis: Solution: Enter infer_protein() – molecular detective! default, uses “parsimony” method, like solving puzzle finding minimum number proteins needed explain observed glycopeptides. Think Occam’s razor proteomics! Mystery solved! glycopeptide now single, confident protein assignment. auto_clean() : Nothing! step requires judgment whether protein-level analysis needed, auto_clean() leaves decision capable hands.","code":"# Check how many glycopeptides have multiple protein assignments sum(stringr::str_detect(get_var_info(aggregated_exp2)$proteins, \";\")) #> [1] 48 inferred_exp <- infer_protein(corrected_exp)  # Now there are no multiple protein assignments, # and the column name changed from \"proteins\" to \"protein\". sum(stringr::str_detect(get_var_info(inferred_exp)$protein, \";\")) #> [1] 0"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"step-7-protein-expression-adjustment-separating-signal-from-noise","dir":"Articles","previous_headings":"Taking the Scenic Route: Step-by-Step Preprocessing 🚶‍♀️","what":"Step 7: Protein Expression Adjustment – Separating Signal from Noise 🎯","title":"Get Started with glyclean","text":"’s fascinating biological puzzle: measure glycopeptide’s intensity, ’re actually seeing two stories ! Dual Nature Problem: Every glycopeptide intensity tale two factors: protein story: much substrate protein present glycosylation story: actively protein glycosylated ’s like trying understand applause volume – audience bigger, just enthusiastic? Solution: ’re specifically interested glycosylation changes (protein abundance changes), need mathematically “subtract ” protein expression component. Think noise cancellation biology! Important Prerequisites: protein expression matrix must samples glycopeptide data protein expression matrix properly preprocessed (good news: can use glyclean functions !) Sample matching needs perfect – mixing apples oranges! Pro Tip: glyclean functions happily accept plain matrices input, can preprocess protein expression data using toolkit. Consistency key! auto_clean() : Nothing ! step requires external protein expression data, auto_clean() can’t magically conjure . ’re chef – auto_clean() just provides ingredients!","code":"# We don't run the code here because we don't have the protein expression matrix. adjusted_exp <- adjust_protein(inferred_exp, pro_expr_mat)"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"mission-accomplished","dir":"Articles","previous_headings":"Taking the Scenic Route: Step-by-Step Preprocessing 🚶‍♀️","what":"🎉 Mission Accomplished!","title":"Get Started with glyclean","text":"Congratulations! now beautifully preprocessed, analysis-ready glycoproteomics data. data normalized, filtered, imputed, aggregated, batch-corrected – ’s ready reveal biological secrets!","code":""},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"advanced-usage-beyond-glyexpexperiment-objects","dir":"Articles","previous_headings":"","what":"Advanced Usage: Beyond glyexp::experiment() Objects 🔧","title":"Get Started with glyclean","text":"vignette focuses glyexp::experiment() objects, glyclean designed flexible accommodating different workflows data formats.","code":""},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"working-with-plain-matrices","dir":"Articles","previous_headings":"Advanced Usage: Beyond glyexp::experiment() Objects 🔧","what":"Working with Plain Matrices","title":"Get Started with glyclean","text":"glyclean functions also support plain matrices input! means can use package’s powerful preprocessing capabilities even ’re working traditional data formats. functions intelligently detect input type handle appropriately.","code":"# Example: Using glyclean with a plain matrix my_matrix <- matrix(rnorm(100), nrow = 10) normalized_matrix <- normalize_median(my_matrix) imputed_matrix <- impute_sample_min(normalized_matrix)"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"flexible-grouping-with-custom-vectors","dir":"Articles","previous_headings":"Advanced Usage: Beyond glyexp::experiment() Objects 🔧","what":"Flexible Grouping with Custom Vectors","title":"Get Started with glyclean","text":"Many functions glyclean accept parameter stratified processing. parameter offers maximum flexibility – accepts column names sample metadata direct vectors! gives complete control grouping, even custom groupings aren’t stored experiment object. Perfect complex experimental designs external grouping criteria!","code":"# Using column names (standard approach) normalized_exp <- normalize_median(exp, by = \"group\")  # Using custom vectors (advanced approach) custom_groups <- c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\", \"A\", \"A\", \"B\", \"B\", \"C\", \"C\") normalized_exp <- normalize_median(exp, by = custom_groups)  # This also works with matrices normalized_matrix <- normalize_median(my_matrix, by = custom_groups)"},{"path":"https://glycoverse.github.io/glyclean/articles/glyclean.html","id":"whats-next","dir":"Articles","previous_headings":"","what":"What’s Next?","title":"Get Started with glyclean","text":"clean data hand, ’re ready dive exciting world glyco-omics analysis: Differential analysis: Find glycans change conditions Pathway analysis: Understand biological processes Machine learning: Build predictive models Visualization: Create stunning plots tell data’s story glycoverse ecosystem tools !","code":""},{"path":"https://glycoverse.github.io/glyclean/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bin Fu. Author, maintainer.","code":""},{"path":"https://glycoverse.github.io/glyclean/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fu B (2025). glyclean: Perform Preprocessing Glycomics Glycoproteomics Data. R package version 0.5.1, https://glycoverse.github.io/glyclean/.","code":"@Manual{,   title = {glyclean: Perform Preprocessing on Glycomics and Glycoproteomics Data},   author = {Bin Fu},   year = {2025},   note = {R package version 0.5.1},   url = {https://glycoverse.github.io/glyclean/}, }"},{"path":"https://glycoverse.github.io/glyclean/index.html","id":"glyclean-","dir":"","previous_headings":"","what":"Perform Preprocessing on Glycomics and Glycoproteomics Data","title":"Perform Preprocessing on Glycomics and Glycoproteomics Data","text":"Omics data cleaning preprocessing critical yet cumbersome step. glyclean helps perform tasks ease, can focus fun part: downstream analysis!","code":""},{"path":"https://glycoverse.github.io/glyclean/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Perform Preprocessing on Glycomics and Glycoproteomics Data","text":"can install development version glyclean GitHub :","code":"# install.packages(\"pak\") pak::pak(\"glycoverse/glyclean\")"},{"path":"https://glycoverse.github.io/glyclean/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Perform Preprocessing on Glycomics and Glycoproteomics Data","text":"🚀 Get started: 📚 Reference: ","code":""},{"path":"https://glycoverse.github.io/glyclean/index.html","id":"role-in-glycoverse","dir":"","previous_headings":"","what":"Role in glycoverse","title":"Perform Preprocessing on Glycomics and Glycoproteomics Data","text":"data preprocessing essential step omics data analysis, glyclean plays central role glycoverse ecosystem. serves bridge raw experimental data (imported via glyread) downstream analysis, enabling packages like glystats work clean, analysis-ready data.","code":""},{"path":"https://glycoverse.github.io/glyclean/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Perform Preprocessing on Glycomics and Glycoproteomics Data","text":"Yes, ’s ! Calling magical auto_clean() function automatically perform following steps, suitable way data: Normalization Missing value filtering Imputation Batch effect correction steps necessary downstream analysis.","code":"library(glyexp) library(glyclean) #>  #> Attaching package: 'glyclean' #> The following object is masked from 'package:stats': #>  #>     aggregate  exp <- toy_experiment() exp <- set_exp_type(exp, \"glycomics\") clean_exp <- auto_clean(exp) #> ℹ Normalizing data (Median Quotient) #> ✔ Normalizing data (Median Quotient) [32ms] #>  #> ℹ Removing variables with >50% missing values #> ✔ Removing variables with >50% missing values [47ms] #>  #> ℹ Imputing missing values #> ℹ Sample size <= 30, using sample minimum imputation #> ℹ Imputing missing values✔ Imputing missing values [9ms] #>  #> ℹ Normalizing data (Total Area) #> ℹ Detecting batch effects using ANOVA for 4 variables... #> ℹ Normalizing data (Total Area)✔ Batch effect detection completed. 0 out of 4 variables show significant batch effects (p < 0.05). #> ℹ Normalizing data (Total Area)ℹ Batch effects detected in 0.0% of variables (<=10%). Skipping batch correction. #> ℹ Normalizing data (Total Area)✔ Normalizing data (Total Area) [52ms]"},{"path":"https://glycoverse.github.io/glyclean/reference/adjust_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Protein Expression — adjust_protein","title":"Adjust Protein Expression — adjust_protein","text":"function adjusts glycopeptide expression protein expression. another word, \"strips \" protein expression glycopeptide expression, expression reflects glycosylation status .","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/adjust_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Protein Expression — adjust_protein","text":"","code":"adjust_protein(exp, pro_expr_mat, method = c(\"ratio\", \"reg\"))"},{"path":"https://glycoverse.github.io/glyclean/reference/adjust_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Protein Expression — adjust_protein","text":"exp glyexp_experiment object containing glycoproteomics data. pro_expr_mat matrix protein expression. Columns samples, rows uniprot protein accessions. method method use protein adjustment. Either \"ratio\" \"reg\". Default \"ratio\".","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/adjust_protein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Protein Expression — adjust_protein","text":"glyexp_experiment object adjusted protein expression.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/adjust_protein.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Protein Expression — adjust_protein","text":"simplicity, glycopeptide expression denoted GP, protein expression denoted PRO.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/adjust_protein.html","id":"-ratio-method","dir":"Reference","previous_headings":"","what":"\"ratio\" method","title":"Adjust Protein Expression — adjust_protein","text":"GP-adj = (GP / PRO) / (median(GP) / median(PRO)) first part adjust glycopeptide expression protein expression. second part rescale expression original scale.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/adjust_protein.html","id":"-reg-method","dir":"Reference","previous_headings":"","what":"\"reg\" method","title":"Adjust Protein Expression — adjust_protein","text":"Use linear regression remove protein expression glycopeptide expression. glycopeptide protein expression values log2-transformed (+1 avoid log(0)) fitting linear model: log2(GP+1) ~ log2(PRO+1). residuals represent glycosylation-specific signal converted back original scale using 2^residuals, ensuring adjusted values positive. methods, glycoproteins identified exp pro_expr_mat retained.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Data — aggregate","title":"Aggregate Data — aggregate","text":"Aggregate glycoproteomics data different levels (glycoforms, glycopeptides, etc.). function sums quantitative values unique combination specified variables. recommended call function missing value imputation.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Data — aggregate","text":"","code":"aggregate(exp, to_level = c(\"gf\", \"gp\", \"gfs\", \"gps\"))"},{"path":"https://glycoverse.github.io/glyclean/reference/aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Data — aggregate","text":"exp glyexp_experiment object containing glycoproteomics data. function works glyexp_experiment objects requires variable information aggregation. to_level aggregation level, one : \"gf\" (glycoforms), \"gp\" (glycopeptides), \"gfs\" (glycoforms structures), \"gps\" (glycopeptides structures). See Details information.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Data — aggregate","text":"modified glyexp_experiment object aggregated expression matrix updated variable information.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/aggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate Data — aggregate","text":"to_level parameter determines level aggregation. following levels available: \"gf\": Aggregate glycoforms, unique combination proteins, protein sites, glycan compositions. default level. \"gp\": Aggregate glycopeptides, unique combination peptides, proteins, protein sites, glycan compositions. \"gfs\": Like \"gf\", differentiates structures composition. \"gps\": Like \"gp\", differentiates structures composition. aggregate never called experiment, \"psm\" (peptide-spectrum match) level default. can aggregate experiment \"psm\" levels. can also call aggregate experiment already aggregated. However, aggregate \"gf\" \"gp\", peptide information lost \"gf\" aggregation. Similarly, aggregate \"gf\" \"gfs\", \"gp\" \"gps\".","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/auto_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic Data Preprocessing — auto_clean","title":"Automatic Data Preprocessing — auto_clean","text":"Perform automatic data preprocessing glycoproteomics glycomics data. function applies standardized preprocessing pipeline includes normalization, missing value handling, imputation, aggregation (glycoproteomics data), batch effect correction.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/auto_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic Data Preprocessing — auto_clean","text":"","code":"auto_clean(exp)"},{"path":"https://glycoverse.github.io/glyclean/reference/auto_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic Data Preprocessing — auto_clean","text":"exp glyexp::experiment() containing glycoproteomics glycomics data.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/auto_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic Data Preprocessing — auto_clean","text":"modified glyexp::experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/auto_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatic Data Preprocessing — auto_clean","text":"preprocessing pipeline differs based experiment type: Glycoproteomics Data: Median normalization Remove variables \\>50% missing values Automatic imputation (method depends sample size) Automatic aggregation (gfs level structure available, otherwise gf level) Final median normalization Intelligent batch effect correction Glycomics Data: Median quotient normalization Remove variables \\>50% missing values Automatic imputation (method depends sample size) Total area normalization Intelligent batch effect correction Automatic Imputation Strategy: <=30 samples: Sample minimum imputation 31-100 samples: Minimum probability imputation \\>100 samples: MissForest imputation Automatic Aggregation Strategy (Glycoproteomics ): glycan_structure column exists: Aggregate \"gfs\" level glycan_structure column: Aggregate \"gf\" level Intelligent Batch Effect Correction: function first detects batch effects using ANOVA. Batch correction performed 10% variables show significant batch effects (p < 0.05). group column exists sample information, used covariate detection correction preserve biological variation. batches defined batch column sample information tibble.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyclean/reference/auto_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic Data Preprocessing — auto_clean","text":"","code":"if (FALSE) { # \\dontrun{ # For glycoproteomics data cleaned_exp <- auto_clean(glycoprot_exp)  # For glycomics data cleaned_exp <- auto_clean(glycomics_exp) } # }"},{"path":"https://glycoverse.github.io/glyclean/reference/correct_batch_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct Batch Effect — correct_batch_effect","title":"Correct Batch Effect — correct_batch_effect","text":"Correct batch effects glycoproteomics/glycomics data using ComBat algorithm sva package.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/correct_batch_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct Batch Effect — correct_batch_effect","text":"","code":"correct_batch_effect(x, batch = \"batch\", group = NULL)"},{"path":"https://glycoverse.github.io/glyclean/reference/correct_batch_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct Batch Effect — correct_batch_effect","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. batch Either factor/character vector specifying batch assignments sample, string specifying column name sample_info (experiment input ). Default \"batch\" experiment input. group Either factor/character vector specifying group assignments sample, string specifying column name sample_info (experiment input ). provided, used covariate ComBat model. useful unbalanced design. Default NULL.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/correct_batch_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct Batch Effect — correct_batch_effect","text":"glyexp_experiment input, returns modified glyexp_experiment object. matrix input, returns batch-corrected matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/correct_batch_effect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correct Batch Effect — correct_batch_effect","text":"function performs batch effect correction using ComBat algorithm. requires batch information provided via batch parameter. batch information available, function return original data unchanged. group information provided via group, function check confounding batch group variables. batch group highly confounded (complete overlap), function issue warning return original data unchanged avoid -correction. batch group information available highly confounded, group information included model preserve biological variation correcting batch effects.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/correct_batch_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct Batch Effect — correct_batch_effect","text":"","code":"# With glyexp_experiment and column names exp <- glyexp::toy_experiment() exp$sample_info$batch <- c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\") exp$sample_info$group <- c(\"Ctrl\", \"Ctrl\", \"Treat\", \"Ctrl\", \"Treat\", \"Treat\") corrected_exp <- correct_batch_effect(exp, batch = \"batch\", group = \"group\") #> Found2batches #> Adjusting for1covariate(s) or covariate level(s) #> Standardizing Data across genes #> Fitting L/S model and finding priors #> Finding parametric adjustments #> Adjusting the Data #> ✔ Batch effect correction completed using ComBat algorithm.  # With matrix and factor vectors mat <- matrix(rnorm(200), nrow = 20, ncol = 10) batch_factor <- factor(rep(c(\"A\", \"B\"), each = 5)) group_factor <- factor(rep(c(\"Ctrl\", \"Treat\"), times = 5)) corrected_mat <- correct_batch_effect(mat, batch = batch_factor, group = group_factor) #> Warning: NaNs produced #> Found2batches #> Adjusting for1covariate(s) or covariate level(s) #> Found29Missing Data Values  #> Standardizing Data across genes #> Fitting L/S model and finding priors #> Finding parametric adjustments #> Adjusting the Data #> ✔ Batch effect correction completed using ComBat algorithm."},{"path":"https://glycoverse.github.io/glyclean/reference/detect_batch_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect batch effect — detect_batch_effect","title":"Detect batch effect — detect_batch_effect","text":"Use ANOVA detect batch effect present data. group provided, used covariate ANOVA model.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/detect_batch_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect batch effect — detect_batch_effect","text":"","code":"detect_batch_effect(x, batch = \"batch\", group = NULL)"},{"path":"https://glycoverse.github.io/glyclean/reference/detect_batch_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect batch effect — detect_batch_effect","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. batch Either factor/character vector specifying batch assignments sample, string specifying column name sample_info (experiment input ). Default \"batch\" experiment input. group Either factor/character vector specifying group assignments sample, string specifying column name sample_info (experiment input ). provided, used covariate ANOVA model. useful unbalanced design. Default NULL.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/detect_batch_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect batch effect — detect_batch_effect","text":"double vector p-values variable, .e., length nrow(x) (matrix) nrow(get_expr_mat(x)) (experiment)","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/detect_batch_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect batch effect — detect_batch_effect","text":"","code":"# With glyexp_experiment and column names exp <- glyexp::toy_experiment() exp$sample_info$batch <- c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\") exp$sample_info$group <- c(\"Ctrl\", \"Ctrl\", \"Treat\", \"Ctrl\", \"Treat\", \"Treat\") p_values <- detect_batch_effect(exp, batch = \"batch\", group = \"group\") #> ℹ Detecting batch effects using ANOVA for 4 variables... #> ✔ Batch effect detection completed. 4 out of 4 variables show significant batch effects (p < 0.05).  # With matrix and factor vectors mat <- matrix(rnorm(200), nrow = 20, ncol = 10) batch_factor <- factor(rep(c(\"A\", \"B\"), each = 5)) group_factor <- factor(rep(c(\"Ctrl\", \"Treat\"), times = 5)) p_values <- detect_batch_effect(mat, batch = batch_factor, group = group_factor) #> ℹ Detecting batch effects using ANOVA for 20 variables... #> ✔ Batch effect detection completed. 0 out of 20 variables show significant batch effects (p < 0.05)."},{"path":"https://glycoverse.github.io/glyclean/reference/dot-apply_by_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply function with optional grouping — .apply_by_groups","title":"Apply function with optional grouping — .apply_by_groups","text":"function applies matrix function optional grouping factor/vector.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-apply_by_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply function with optional grouping — .apply_by_groups","text":"","code":".apply_by_groups(mat, matrix_func, by_values = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/dot-apply_by_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply function with optional grouping — .apply_by_groups","text":"mat input matrix matrix_func function apply matrix by_values grouping values (factor vector), NULL grouping ... Additional arguments passed matrix_func","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-apply_by_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply function with optional grouping — .apply_by_groups","text":"Processed matrix","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-dispatch_and_apply_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispatch and apply a function by group — .dispatch_and_apply_by_group","title":"Dispatch and apply a function by group — .dispatch_and_apply_by_group","text":"function handles glyexp_experiment objects matrices, validates input, optionally applies function groups samples, returns object type input.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-dispatch_and_apply_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispatch and apply a function by group — .dispatch_and_apply_by_group","text":"","code":".dispatch_and_apply_by_group(x, matrix_func, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/dot-dispatch_and_apply_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispatch and apply a function by group — .dispatch_and_apply_by_group","text":"x Input data, either glyexp_experiment object matrix matrix_func Function apply matrix (implementation function) Grouping variable stratified processing ... Additional arguments passed matrix_func","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-dispatch_and_apply_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dispatch and apply a function by group — .dispatch_and_apply_by_group","text":"type input (experiment matrix)","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-dispatch_on_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispatch on input type — .dispatch_on_input","title":"Dispatch on input type — .dispatch_on_input","text":"function provides basic dispatch mechanism handle glyexp_experiment objects matrices. simpler alternative .dispatch_and_apply_by_group() functions need automatic group-wise application.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-dispatch_on_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispatch on input type — .dispatch_on_input","text":"","code":".dispatch_on_input(x, fun_exp, fun_mat, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/dot-dispatch_on_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispatch on input type — .dispatch_on_input","text":"x Input data, either glyexp_experiment object matrix. fun_exp Function execute glyexp_experiment input. fun_mat Function execute matrix input. ... Additional arguments passed fun_exp fun_mat.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-dispatch_on_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dispatch on input type — .dispatch_on_input","text":"result either fun_exp fun_mat.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-resolve_column_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve column specification to values — .resolve_column_param","title":"Resolve column specification to values — .resolve_column_param","text":"function handles column names (strings) direct factor/vector inputs.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-resolve_column_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve column specification to values — .resolve_column_param","text":"","code":".resolve_column_param(   param,   sample_info = NULL,   param_name = \"parameter\",   n_samples = NULL,   allow_null = TRUE )"},{"path":"https://glycoverse.github.io/glyclean/reference/dot-resolve_column_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve column specification to values — .resolve_column_param","text":"param parameter resolve (can string, factor, vector) sample_info sample_info data frame (experiment objects) param_name name parameter (error messages) n_samples number samples (validation) allow_null Whether NULL values allowed","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/dot-resolve_column_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve column specification to values — .resolve_column_param","text":"resolved values vector, NULL param NULL allow_null TRUE","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_bpca.html","id":null,"dir":"Reference","previous_headings":"","what":"BPCA Imputation — impute_bpca","title":"BPCA Imputation — impute_bpca","text":"wrapper around pcaMethods::pca(). Impute missing values using Bayesian principal component analysis (BPCA). BPCA combines EM approach PCA Bayesian model. standard PCA data far training set close principal subspace may reconstruction error. BPCA defines likelihood function likelihood data far training set much lower, even close principal subspace.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_bpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BPCA Imputation — impute_bpca","text":"","code":"impute_bpca(x, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_bpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BPCA Imputation — impute_bpca","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Used grouping imputing missing values. ... Additional arguments pass pcaMethods::pca().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_bpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BPCA Imputation — impute_bpca","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_fw_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature-wise KNN Imputation — impute_fw_knn","title":"Feature-wise KNN Imputation — impute_fw_knn","text":"wrapper around impute::impute.knn(). Impute missing values values k-nearest neighbors corresponding feature.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_fw_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature-wise KNN Imputation — impute_fw_knn","text":"","code":"impute_fw_knn(x, k = 5, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_fw_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature-wise KNN Imputation — impute_fw_knn","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. k number nearest neighbors consider. Either column name sample_info (string) factor/vector specifying group assignments sample. Used grouping imputing missing values. ... Additional arguments pass impute::impute.knn().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_fw_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Feature-wise KNN Imputation — impute_fw_knn","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_half_sample_min.html","id":null,"dir":"Reference","previous_headings":"","what":"Half Sample Minimum Imputation — impute_half_sample_min","title":"Half Sample Minimum Imputation — impute_half_sample_min","text":"Impute missing values half minimum value corresponding sample. method assumes missing values MCAR, .e. missing values induced ion detection limit. Compared impute_sample_min(), method conservative.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_half_sample_min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Half Sample Minimum Imputation — impute_half_sample_min","text":"","code":"impute_half_sample_min(x)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_half_sample_min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Half Sample Minimum Imputation — impute_half_sample_min","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_half_sample_min.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Half Sample Minimum Imputation — impute_half_sample_min","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_min_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimum Probability Imputation — impute_min_prob","title":"Minimum Probability Imputation — impute_min_prob","text":"wrapper around imputeLCMD::impute.MinProb(). Impute missing values using random draws left-censored gaussian distribution.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_min_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimum Probability Imputation — impute_min_prob","text":"","code":"impute_min_prob(x, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_min_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Minimum Probability Imputation — impute_min_prob","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Used grouping imputing missing values. ... Additional arguments pass imputeLCMD::impute.MinProb().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_min_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Minimum Probability Imputation — impute_min_prob","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_miss_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"MissForest Imputation — impute_miss_forest","title":"MissForest Imputation — impute_miss_forest","text":"wrapper around missForest::missForest(). Impute missing values using recursive running random forests convergence. non-parametric method works MAR MNAR missing data.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_miss_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MissForest Imputation — impute_miss_forest","text":"","code":"impute_miss_forest(x, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_miss_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MissForest Imputation — impute_miss_forest","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Used grouping imputing missing values. ... Additional arguments pass missForest::missForest().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_miss_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MissForest Imputation — impute_miss_forest","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_ppca.html","id":null,"dir":"Reference","previous_headings":"","what":"PPCA Imputation — impute_ppca","title":"PPCA Imputation — impute_ppca","text":"wrapper around pcaMethods::pca(). Impute missing values using probabilistic principal component analysis (PPCA). PPCA allows perform PCA incomplete data may used missing value estimation.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_ppca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PPCA Imputation — impute_ppca","text":"","code":"impute_ppca(x, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_ppca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PPCA Imputation — impute_ppca","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Used grouping imputing missing values. ... Additional arguments pass pcaMethods::pca().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_ppca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PPCA Imputation — impute_ppca","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_sample_min.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Minimum Imputation — impute_sample_min","title":"Sample Minimum Imputation — impute_sample_min","text":"Impute missing values minimum value corresponding sample. method assumes missing values MCAR, .e. missing values induced ion detection limit. See also impute_half_sample_min().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_sample_min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Minimum Imputation — impute_sample_min","text":"","code":"impute_sample_min(x)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_sample_min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Minimum Imputation — impute_sample_min","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_sample_min.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Minimum Imputation — impute_sample_min","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_svd.html","id":null,"dir":"Reference","previous_headings":"","what":"SVD Imputation — impute_svd","title":"SVD Imputation — impute_svd","text":"wrapper around pcaMethods::pca(). Impute missing values using singular value decomposition (SVD) imputation. SVD matrix factorization technique factors matrix three matrices: U, Σ, V. SVD used find best lower rank approximation original matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_svd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SVD Imputation — impute_svd","text":"","code":"impute_svd(x, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_svd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SVD Imputation — impute_svd","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Used grouping imputing missing values. ... Additional arguments pass pcaMethods::pca().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_svd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SVD Imputation — impute_svd","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_sw_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample-wise KNN Imputation — impute_sw_knn","title":"Sample-wise KNN Imputation — impute_sw_knn","text":"wrapper around impute::impute.knn(). Impute missing values values k-nearest neighbors corresponding sample. strong patterns among samples (group clustering relationships experimental conditions), method can better utilize overall relationships among samples.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_sw_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample-wise KNN Imputation — impute_sw_knn","text":"","code":"impute_sw_knn(x, k = 5, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_sw_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample-wise KNN Imputation — impute_sw_knn","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. k number nearest neighbors consider. Either column name sample_info (string) factor/vector specifying group assignments sample. Used grouping imputing missing values. ... Additional arguments pass impute::impute.knn().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_sw_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample-wise KNN Imputation — impute_sw_knn","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero Imputation — impute_zero","title":"Zero Imputation — impute_zero","text":"Impute missing values expression matrix replacing zeros.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero Imputation — impute_zero","text":"","code":"impute_zero(x)"},{"path":"https://glycoverse.github.io/glyclean/reference/impute_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero Imputation — impute_zero","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/impute_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero Imputation — impute_zero","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment missing values imputed. x matrix, returns matrix missing values imputed.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/infer_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein Inference for Shared Glycopeptides — infer_protein","title":"Protein Inference for Shared Glycopeptides — infer_protein","text":"Resolves protein assignment ambiguity glycopeptides shared across multiple proteins. Provides three strategies: retain unique assignments, apply parsimony principle, split shared peptides among candidate proteins. function processes semicolon-delimited protein annotations proteins, genes, protein_sites columns (e.g., \"PRO1;PRO2\" shared peptides) converts singular assignments corresponding protein, gene, protein_site columns.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/infer_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein Inference for Shared Glycopeptides — infer_protein","text":"","code":"infer_protein(exp, method = c(\"parsimony\", \"share\", \"unique\"))"},{"path":"https://glycoverse.github.io/glyclean/reference/infer_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protein Inference for Shared Glycopeptides — infer_protein","text":"exp glyexp::experiment() containing glycoproteomics data. method method use protein inference. Either unique, parsimony, share. Default parsimony.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/infer_protein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protein Inference for Shared Glycopeptides — infer_protein","text":"glyexp::experiment() containing protein infered.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/infer_protein.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Protein Inference for Shared Glycopeptides — infer_protein","text":"function provides three different strategies handling shared glycopeptides:","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/infer_protein.html","id":"unique-method","dir":"Reference","previous_headings":"","what":"Unique Method","title":"Protein Inference for Shared Glycopeptides — infer_protein","text":"unique method conservative approach. retains glycopeptides uniquely assigned single protein (.e., without \";\" proteins column). Algorithm: Simple filtering based protein column content. Use cases: need high confidence protein assignments exploratory analysis shared peptides might introduce noise computational simplicity preferred Trade-offs: Pros: ambiguity, clean results Cons: Loss data (shared glycopeptides discarded)","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/infer_protein.html","id":"parsimony-method","dir":"Reference","previous_headings":"","what":"Parsimony Method","title":"Protein Inference for Shared Glycopeptides — infer_protein","text":"parsimony method uses greedy set cover algorithm find minimal set proteins can explain observed glycopeptides. assigns shared glycopeptide protein highest overall coverage. Algorithm: Greedy selection: Iteratively choose protein covers uncovered glycopeptides Coverage-based assignment: Assign glycopeptide selected protein highest total coverage Tie-breaking: coverage equal, select first protein original order Use cases: Standard protein inference glycoproteomics want retain data minimizing protein redundancy quantitative analysis protein count matters Trade-offs: Pros: Retains glycopeptides, uses minimal protein set, biologically motivated Cons: assignments may arbitrary highly shared peptides","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/infer_protein.html","id":"share-method","dir":"Reference","previous_headings":"","what":"Share Method","title":"Protein Inference for Shared Glycopeptides — infer_protein","text":"share method assumes shared glycopeptides equally contributed associated proteins. shared glycopeptide split multiple entries, expression values divided equally among proteins. Algorithm: Split glycopeptide separate entries associated protein Divide expression values number associated proteins Create unique variable names using format \"original_variable_protein\" Use cases: need preserve complete protein-glycopeptide relationships protein-level quantification protein's contribution matters studying protein isoforms splice variants Trade-offs: Pros: Complete information preservation, expression conservation, explicit modeling sharing Cons: Increased data size, assumption equal contribution may reflect biology","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/infer_protein.html","id":"output-format","dir":"Reference","previous_headings":"","what":"Output Format","title":"Protein Inference for Shared Glycopeptides — infer_protein","text":"methods convert plural columns (proteins, genes, protein_sites) singular equivalents (protein, gene, protein_site), protein_site converted integer type. choice method depends specific analysis goals tolerance data loss versus ambiguity.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_loesscyc.html","id":null,"dir":"Reference","previous_headings":"","what":"LoessCyc Normalization — normalize_loesscyc","title":"LoessCyc Normalization — normalize_loesscyc","text":"function wrapper around limma::normalizeCyclicLoess() method = \"pairs\". pair columns normalized mutually . See paper information. Also see limma::normalizeCyclicLoess().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_loesscyc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LoessCyc Normalization — normalize_loesscyc","text":"","code":"normalize_loesscyc(x, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_loesscyc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LoessCyc Normalization — normalize_loesscyc","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Optional. provided, normalization performed within group. ... Additional arguments pass limma::normalizeCyclicLoess().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_loesscyc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LoessCyc Normalization — normalize_loesscyc","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_loessf.html","id":null,"dir":"Reference","previous_headings":"","what":"LoessF Normalization — normalize_loessf","title":"LoessF Normalization — normalize_loessf","text":"function wrapper around limma::normalizeCyclicLoess() method = \"fast\". column simply normalized reference array, reference array average arrays. See paper information. Also see limma::normalizeCyclicLoess().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_loessf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LoessF Normalization — normalize_loessf","text":"","code":"normalize_loessf(x, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_loessf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LoessF Normalization — normalize_loessf","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Optional. provided, normalization performed within group. ... Additional arguments pass limma::normalizeCyclicLoess().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_loessf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LoessF Normalization — normalize_loessf","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Median Normalization — normalize_median","title":"Median Normalization — normalize_median","text":"Normalize expression matrix dividing column (sample) median column (NA ignored), median column 1. common normalization method proteomics data. effectively robustly removes bias introduced total protein abundance, removes batch effects part.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median Normalization — normalize_median","text":"","code":"normalize_median(x)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median Normalization — normalize_median","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median Normalization — normalize_median","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median_abs.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Median Normalization — normalize_median_abs","title":"Absolute Median Normalization — normalize_median_abs","text":"Normalize expression matrix dividing column (sample) absolute median column (NA ignored), absolute median column 1.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median_abs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Median Normalization — normalize_median_abs","text":"","code":"normalize_median_abs(x)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median_abs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Median Normalization — normalize_median_abs","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median_abs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Median Normalization — normalize_median_abs","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median_quotient.html","id":null,"dir":"Reference","previous_headings":"","what":"Median Quotient Normalization — normalize_median_quotient","title":"Median Quotient Normalization — normalize_median_quotient","text":"approach based calculation dilution factor sample respect reference sample. , reference sample calculated median value glycan's abundance across measured samples. sample, vector quotients obtained dividing glycan measure corresponding value reference sample. median quotients used sample's dilution factor, original sample values subsequently divided value. underlying assumption diﬀerent intensities observed across individuals imputable diﬀerent amounts biological material collected samples. See paper information.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median_quotient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median Quotient Normalization — normalize_median_quotient","text":"","code":"normalize_median_quotient(x, by = NULL)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median_quotient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median Quotient Normalization — normalize_median_quotient","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Optional. provided, normalization performed within group.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_median_quotient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median Quotient Normalization — normalize_median_quotient","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile Normalization — normalize_quantile","title":"Quantile Normalization — normalize_quantile","text":"function wrapper around limma::normalizeQuantiles(). normalizes expression matrix quantile normalization. method used remove technical variation samples. Proteomics data rarely uses method, common microarray data. See wikipedia information.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile Normalization — normalize_quantile","text":"","code":"normalize_quantile(x, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile Normalization — normalize_quantile","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Optional. provided, normalization performed within group. ... Additional arguments pass limma::normalizeQuantiles().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile Normalization — normalize_quantile","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlr.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Linear Regression Normalization — normalize_rlr","title":"Robust Linear Regression Normalization — normalize_rlr","text":"method based robust linear regression. reference sample calculated median value variable's abundance across measured samples. sample, robust linear regression model fitted sample's abundance values reference sample's abundance values. fitted model used normalize sample's abundance values. underlying assumption diﬀerent intensities observed across individuals imputable diﬀerent amounts biological material collected samples.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Linear Regression Normalization — normalize_rlr","text":"","code":"normalize_rlr(x, by = NULL)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Linear Regression Normalization — normalize_rlr","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Optional. provided, normalization performed within group.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Linear Regression Normalization — normalize_rlr","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlrma.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Linear Regression with Median Adjustment Normalization — normalize_rlrma","title":"Robust Linear Regression with Median Adjustment Normalization — normalize_rlrma","text":"method based robust linear regression median adjustment. First, median variable's abundance across measured samples subtracted sample's abundance values. , like normalize_rlr() method.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlrma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Linear Regression with Median Adjustment Normalization — normalize_rlrma","text":"","code":"normalize_rlrma(x, by = NULL)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlrma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Linear Regression with Median Adjustment Normalization — normalize_rlrma","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Optional. provided, normalization performed within group.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlrma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Linear Regression with Median Adjustment Normalization — normalize_rlrma","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlrmacyc.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Linear Regression with Median Adjustment and Cyclic Normalization — normalize_rlrmacyc","title":"Robust Linear Regression with Median Adjustment and Cyclic Normalization — normalize_rlrmacyc","text":"method based robust linear regression median adjustment cyclic normalization. method applied iteratively pair samples. pair samples, median differences two samples calculated. robust linear regression model fitted differences averages two samples. fitted model used normalize two samples. process repeated number iterations.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlrmacyc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Linear Regression with Median Adjustment and Cyclic Normalization — normalize_rlrmacyc","text":"","code":"normalize_rlrmacyc(x, n_iter = 3, by = NULL)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlrmacyc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Linear Regression with Median Adjustment and Cyclic Normalization — normalize_rlrmacyc","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. n_iter number iterations perform. Default 3. Either column name sample_info (string) factor/vector specifying group assignments sample. Optional. provided, normalization performed within group.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_rlrmacyc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Linear Regression with Median Adjustment and Cyclic Normalization — normalize_rlrmacyc","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_total_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Total Area Normalization — normalize_total_area","title":"Total Area Normalization — normalize_total_area","text":"Normalize expression matrix dividing column (sample) sum column, sum column 1. common normalization method glycomics data. removes bias introduced total glycan abundance. However, results compositional data, may result unrealistic downstream analysis results.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_total_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total Area Normalization — normalize_total_area","text":"","code":"normalize_total_area(x)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_total_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total Area Normalization — normalize_total_area","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_total_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total Area Normalization — normalize_total_area","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_vsn.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance Stabilizing Normalization — normalize_vsn","title":"Variance Stabilizing Normalization — normalize_vsn","text":"function wrapper around limma::normalizeVSN(). Evidence proved method performs well reducing noise boosting differential expression detection. Log-transformation needed downstream statistical analysis, normalization method performs log-like transformation internally. Due reason, fold change estimates severely distorted. Please use method caution. See paper information.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_vsn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance Stabilizing Normalization — normalize_vsn","text":"","code":"normalize_vsn(x, by = NULL, ...)"},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_vsn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance Stabilizing Normalization — normalize_vsn","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. Either column name sample_info (string) factor/vector specifying group assignments sample. Optional. provided, normalization performed within group. ... Additional arguments pass limma::normalizeVSN().","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_vsn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance Stabilizing Normalization — normalize_vsn","text":"Returns type input. x glyexp_experiment, returns glyexp_experiment normalized expression matrix. x matrix, returns normalized matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/normalize_vsn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variance Stabilizing Normalization — normalize_vsn","text":"least 42 variables provided method. follows convention vsn package.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/remove_missing_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Variables with Missing Values — remove_missing_variables","title":"Remove Variables with Missing Values — remove_missing_variables","text":"Remove Variables Missing Values","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/remove_missing_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Variables with Missing Values — remove_missing_variables","text":"","code":"remove_missing_variables(   x,   prop = NULL,   n = NULL,   by = NULL,   strict = FALSE,   min_n = NULL )"},{"path":"https://glycoverse.github.io/glyclean/reference/remove_missing_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Variables with Missing Values — remove_missing_variables","text":"x Either glyexp_experiment object matrix. matrix, rows variables columns samples. prop proportion missing values use threshold. Variables missing values threshold removed. Defaults 0.5. n number missing values use threshold. alternative prop. Either column name sample_info (string) factor/vector specifying group assignments sample. Missing value counts proportions calculated within group. strict Works . FALSE, remove variable passes missing threshold groups. TRUE, remove variable passes missing threshold group. See examples details. min_n minimum number non-missing values required variable kept. NULL (default), calculated dynamically: datasets 1, 2, 3 samples: min_n equals sample count datasets >3 samples: min_n = 3 using , rule applied within group","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/remove_missing_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Variables with Missing Values — remove_missing_variables","text":"glyexp_experiment input, returns modified glyexp_experiment object. matrix input, returns filtered matrix.","code":""},{"path":"https://glycoverse.github.io/glyclean/reference/remove_missing_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Variables with Missing Values — remove_missing_variables","text":"","code":"# With glyexp_experiment exp <- glyexp::toy_experiment() exp$expr_mat[1, 1] <- NA    # V1: 1/6 missing exp$expr_mat[2, 1:3] <- NA  # V2: 3/6 missing exp$expr_mat[3, 1:5] <- NA  # V3: 5/6 missing exp$expr_mat[4, 1:6] <- NA  # V4: 6/6 missing exp$expr_mat #>    S1 S2 S3 S4 S5 S6 #> V1 NA  5  9 13 17 21 #> V2 NA NA NA 14 18 22 #> V3 NA NA NA NA NA 23 #> V4 NA NA NA NA NA NA  # Remove variables with more than 50% missing values. remove_missing_variables(exp, prop = 0.5)$expr_mat #>    S1 S2 S3 S4 S5 S6 #> V1 NA  5  9 13 17 21 #> V2 NA NA NA 14 18 22  # Remove variables with more than 2 missing values. remove_missing_variables(exp, n = 2)$expr_mat #>    S1 S2 S3 S4 S5 S6 #> V1 NA  5  9 13 17 21  # Remove variables if they have more than 1 missing value in all groups. # In another word, keep variables as long as they have 1 or 0 missing value # in any group. remove_missing_variables(exp, by = \"group\", strict = FALSE)$expr_mat #>    S1 S2 S3 S4 S5 S6 #> V1 NA  5  9 13 17 21 #> V2 NA NA NA 14 18 22  # Keep only variables with no missing values. remove_missing_variables(exp, prop = 0)$expr_mat #>      S1 S2 S3 S4 S5 S6  # Use custom min_n to require at least 4 non-missing values remove_missing_variables(exp, min_n = 4)$expr_mat #>    S1 S2 S3 S4 S5 S6 #> V1 NA  5  9 13 17 21  # With matrix mat <- matrix(c(1, 2, NA, 4, 5, NA, 7, 8, 9), nrow = 3) mat_filtered <- remove_missing_variables(mat, prop = 0.5)"},{"path":[]},{"path":"https://glycoverse.github.io/glyclean/news/index.html","id":"major-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"glyclean 0.5.0","text":"Add infer_protein() function resolve multiple protein assignments glycopeptides. Add adjust_protein() function remove protein expression glycopeptide expression.","code":""},{"path":"https://glycoverse.github.io/glyclean/news/index.html","id":"minor-improvements-0-5-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"glyclean 0.5.0","text":"Rename first argument aggregate() x exp consistent functions.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyclean/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"glyclean 0.4.0","text":"data processing functions now accept matrices input addition glyexp_experiment objects. parameter data processing functions now accepts factors addition column names, enabling direct use matrix inputs. API updated support custom grouping factors batch operations working matrices.","code":""},{"path":"https://glycoverse.github.io/glyclean/news/index.html","id":"minor-improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"glyclean 0.4.0","text":"Improved error messages correct_batch_effect() detect_batch_effect() column names found sample information. meaningful error messages providing column names batch group arguments matrix inputs. Enhanced parameter validation error handling across modules.","code":""},{"path":"https://glycoverse.github.io/glyclean/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"glyclean 0.4.0","text":"Fixed incorrect behavior argument filter_missing_variable(). Resolved issues parameter processing using different input types.","code":""},{"path":"https://glycoverse.github.io/glyclean/news/index.html","id":"glyclean-030","dir":"Changelog","previous_headings":"","what":"glyclean 0.3.0","title":"glyclean 0.3.0","text":"auto_clean() now detects batch effects batch correction. to_level argument removed auto_clean().","code":""}]
