% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto-clean.R
\name{auto_clean}
\alias{auto_clean}
\title{Automatic Data Preprocessing}
\usage{
auto_clean(exp, to_level = NULL)
}
\arguments{
\item{exp}{A \code{glyexp::experiment()} containing glycoproteomics or
glycomics data.}

\item{to_level}{The aggregation level for glycoproteomics data. Default is
\code{NULL}, which will automatically set to "gfs" (glycoforms with structures) for
glycoproteomics data. Options include:
\itemize{
\item "gf": Glycoform level
\item "gp": Glycopeptide level
\item "gfs": Glycan site specific level
\item "gps": Glycopeptide site specific level
}

See \code{\link[=aggregate]{aggregate()}} for more details.}
}
\value{
A modified \code{glyexp::experiment()} object.
}
\description{
Perform automatic data preprocessing on glycoproteomics or glycomics data.
This function applies a standardized preprocessing pipeline that includes
normalization, missing value handling, imputation, aggregation (for
glycoproteomics data), and batch effect correction.
}
\details{
The preprocessing pipeline differs based on the experiment type:

For Glycoproteomics Data:
\enumerate{
\item Median normalization
\item Remove variables with \\>50\% missing values
\item Automatic imputation (method depends on sample size)
\item Aggregation to specified level
\item Final median normalization
\item Batch effect correction
}

For Glycomics Data:
\enumerate{
\item Median quotient normalization
\item Remove variables with \\>50\% missing values
\item Automatic imputation (method depends on sample size)
\item Total area normalization
\item Batch effect correction
}

Automatic Imputation Strategy:
\itemize{
\item â‰¤30 samples: Sample minimum imputation
\item 31-100 samples: Minimum probability imputation
\item \\>100 samples: MissForest imputation
}

In batch effect correction,
the batches are defined by the \code{batch} column in the sample information tibble.
}
\examples{
\dontrun{
# For glycoproteomics data with default aggregation
cleaned_exp <- auto_clean(glycoprot_exp)

# For glycoproteomics data with specific aggregation level
cleaned_exp <- auto_clean(glycoprot_exp, to_level = "gp")

# For glycomics data
cleaned_exp <- auto_clean(glycomics_exp)
}

}
\seealso{
\code{\link[=aggregate]{aggregate()}}, \code{\link[=normalize_median]{normalize_median()}}, \code{\link[=remove_missing_variables]{remove_missing_variables()}},
\code{\link[=impute_sample_min]{impute_sample_min()}}, \code{\link[=impute_min_prob]{impute_min_prob()}}, \code{\link[=impute_miss_forest]{impute_miss_forest()}},
\code{\link[=correct_batch_effect]{correct_batch_effect()}}
}
