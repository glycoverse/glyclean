% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter-variable.R
\name{remove_missing_variables}
\alias{remove_missing_variables}
\title{Remove Variables with Missing Values}
\usage{
remove_missing_variables(
  exp,
  prop = NULL,
  n = NULL,
  by = NULL,
  strict = FALSE,
  min_n = NULL
)
}
\arguments{
\item{exp}{An experiment object.}

\item{prop}{The proportion of missing values to use as a threshold.
Variables with missing values above this threshold will be removed.
Defaults to 0.5.}

\item{n}{The number of missing values to use as a threshold.
An alternative to \code{prop}.}

\item{by}{A string specifying a sample information column to stratify by.
Missing value counts or proportions will be calculated within each group.}

\item{strict}{Works with \code{by}. If \code{FALSE}, remove a variable only if
it passes the missing threshold in all groups.
If \code{TRUE}, remove a variable if it passes the missing threshold in any group.
See examples for more details.}

\item{min_n}{The minimum number of non-missing values required for a variable
to be kept. If \code{NULL} (default), it is calculated dynamically:
\itemize{
\item For datasets with 1, 2, or 3 samples: min_n equals the sample count
\item For datasets with >3 samples: min_n = 3
\item When using \code{by}, the rule is applied within each group
}}
}
\value{
An experiment object with the variables removed.
}
\description{
Remove Variables with Missing Values
}
\examples{
exp <- glyexp::toy_experiment()
exp$expr_mat[1, 1] <- NA    # V1: 1/6 missing
exp$expr_mat[2, 1:3] <- NA  # V2: 3/6 missing
exp$expr_mat[3, 1:5] <- NA  # V3: 5/6 missing
exp$expr_mat[4, 1:6] <- NA  # V4: 6/6 missing
exp$expr_mat

# Remove variables with more than 50\% missing values.
remove_missing_variables(exp, prop = 0.5)$expr_mat

# Remove variables with more than 2 missing values.
remove_missing_variables(exp, n = 2)$expr_mat

# Remove variables if they have more than 1 missing value in all groups.
# In another word, keep variables as long as they have 1 or 0 missing value
# in any group.
remove_missing_variables(exp, by = "group", strict = FALSE)$expr_mat

# Keep only variables with no missing values.
remove_missing_variables(exp, prop = 0)$expr_mat

# Use custom min_n to require at least 4 non-missing values
remove_missing_variables(exp, min_n = 4)$expr_mat

}
